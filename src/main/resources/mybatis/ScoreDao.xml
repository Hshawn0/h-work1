<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swing.student.dao.ScoreDao">
    <resultMap id="BaseResultMap" type="com.swing.student.domain.Score">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
    </resultMap>

    <resultMap id="BaseResultMapScoreDTO" type="com.swing.student.web.dto.ScoreDTO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="student_num" jdbcType="VARCHAR" property="studentNum"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, student_id, course_id, score
  </sql>
    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from score
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteById" parameterType="java.lang.Long">
    delete from score
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByStudentId" parameterType="java.lang.Long">
    delete from score
    where student_id = #{studentId}
    </delete>
    <delete id="deleteByCourseId" parameterType="java.lang.Long">
    delete from score
    where course_id = #{courseId}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.swing.student.domain.Score"
            useGeneratedKeys="true">
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">
                student_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="score != null">
                score,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.swing.student.domain.Score">
        update score
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="listAll" parameterType="com.swing.student.web.dto.ScoreDTO" resultMap="BaseResultMapScoreDTO">
        SELECT
        score.id,
        student.username,
        student.student_num,
        student.class_name,
        course.course_name,
        score.score
        FROM
        score
        INNER JOIN
        course
        ON
        score.course_id = course.id
        INNER JOIN
        student
        ON
        student.id = score.student_id
        <where>
            <if test="username != null and username != ''">
                AND username like concat('%', #{username}, '%')
            </if>
            <if test="studentNum != null and studentNum != ''">
                AND student_num like concat('%', #{studentNum}, '%')
            </if>
            <if test="className != null and className != ''">
                AND class_name like concat('%', #{className}, '%')
            </if>
            <if test="courseName != null and courseName != ''">
                AND course_name like concat('%', #{courseName}, '%')
            </if>
        </where>
    </select>
</mapper>